<?php
/**
 * GameFeatureAddRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * GameFeatureAddRequest Class Doc Comment
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GameFeatureAddRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GameFeatureAddRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'accountId' => 'int',
        'promotedObjectType' => '\TencentAds\Model\PromotedObjectType',
        'promotedObjectId' => 'string',
        'profitModeId' => 'int',
        'gameTypeId' => 'int',
        'gameplayIdList' => 'int[]',
        'gameThemeId' => 'int',
        'gameSubThemeId' => 'int',
        'gameMarketingLifecycleList' => '\TencentAds\Model\GameMarketingLifecycleStruct[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'accountId' => 'int64',
        'promotedObjectType' => null,
        'promotedObjectId' => null,
        'profitModeId' => 'int64',
        'gameTypeId' => 'int64',
        'gameplayIdList' => 'int64',
        'gameThemeId' => 'int64',
        'gameSubThemeId' => 'int64',
        'gameMarketingLifecycleList' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'account_id',
        'promotedObjectType' => 'promoted_object_type',
        'promotedObjectId' => 'promoted_object_id',
        'profitModeId' => 'profit_mode_id',
        'gameTypeId' => 'game_type_id',
        'gameplayIdList' => 'gameplay_id_list',
        'gameThemeId' => 'game_theme_id',
        'gameSubThemeId' => 'game_sub_theme_id',
        'gameMarketingLifecycleList' => 'game_marketing_lifecycle_list'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'promotedObjectType' => 'setPromotedObjectType',
        'promotedObjectId' => 'setPromotedObjectId',
        'profitModeId' => 'setProfitModeId',
        'gameTypeId' => 'setGameTypeId',
        'gameplayIdList' => 'setGameplayIdList',
        'gameThemeId' => 'setGameThemeId',
        'gameSubThemeId' => 'setGameSubThemeId',
        'gameMarketingLifecycleList' => 'setGameMarketingLifecycleList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'promotedObjectType' => 'getPromotedObjectType',
        'promotedObjectId' => 'getPromotedObjectId',
        'profitModeId' => 'getProfitModeId',
        'gameTypeId' => 'getGameTypeId',
        'gameplayIdList' => 'getGameplayIdList',
        'gameThemeId' => 'getGameThemeId',
        'gameSubThemeId' => 'getGameSubThemeId',
        'gameMarketingLifecycleList' => 'getGameMarketingLifecycleList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['promotedObjectType'] = isset($data['promotedObjectType']) ? $data['promotedObjectType'] : null;
        $this->container['promotedObjectId'] = isset($data['promotedObjectId']) ? $data['promotedObjectId'] : null;
        $this->container['profitModeId'] = isset($data['profitModeId']) ? $data['profitModeId'] : null;
        $this->container['gameTypeId'] = isset($data['gameTypeId']) ? $data['gameTypeId'] : null;
        $this->container['gameplayIdList'] = isset($data['gameplayIdList']) ? $data['gameplayIdList'] : null;
        $this->container['gameThemeId'] = isset($data['gameThemeId']) ? $data['gameThemeId'] : null;
        $this->container['gameSubThemeId'] = isset($data['gameSubThemeId']) ? $data['gameSubThemeId'] : null;
        $this->container['gameMarketingLifecycleList'] = isset($data['gameMarketingLifecycleList']) ? $data['gameMarketingLifecycleList'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int|mixed
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int|mixed $accountId accountId
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets promotedObjectType
     *
     * @return \TencentAds\Model\PromotedObjectType|mixed
     */
    public function getPromotedObjectType()
    {
        return $this->container['promotedObjectType'];
    }

    /**
     * Sets promotedObjectType
     *
     * @param \TencentAds\Model\PromotedObjectType|mixed $promotedObjectType promotedObjectType
     *
     * @return $this
     */
    public function setPromotedObjectType($promotedObjectType)
    {
        $this->container['promotedObjectType'] = $promotedObjectType;

        return $this;
    }

    /**
     * Gets promotedObjectId
     *
     * @return string|mixed
     */
    public function getPromotedObjectId()
    {
        return $this->container['promotedObjectId'];
    }

    /**
     * Sets promotedObjectId
     *
     * @param string|mixed $promotedObjectId promotedObjectId
     *
     * @return $this
     */
    public function setPromotedObjectId($promotedObjectId)
    {
        $this->container['promotedObjectId'] = $promotedObjectId;

        return $this;
    }

    /**
     * Gets profitModeId
     *
     * @return int|mixed
     */
    public function getProfitModeId()
    {
        return $this->container['profitModeId'];
    }

    /**
     * Sets profitModeId
     *
     * @param int|mixed $profitModeId profitModeId
     *
     * @return $this
     */
    public function setProfitModeId($profitModeId)
    {
        $this->container['profitModeId'] = $profitModeId;

        return $this;
    }

    /**
     * Gets gameTypeId
     *
     * @return int|mixed
     */
    public function getGameTypeId()
    {
        return $this->container['gameTypeId'];
    }

    /**
     * Sets gameTypeId
     *
     * @param int|mixed $gameTypeId gameTypeId
     *
     * @return $this
     */
    public function setGameTypeId($gameTypeId)
    {
        $this->container['gameTypeId'] = $gameTypeId;

        return $this;
    }

    /**
     * Gets gameplayIdList
     *
     * @return int[]|mixed
     */
    public function getGameplayIdList()
    {
        return $this->container['gameplayIdList'];
    }

    /**
     * Sets gameplayIdList
     *
     * @param int[]|mixed $gameplayIdList gameplayIdList
     *
     * @return $this
     */
    public function setGameplayIdList($gameplayIdList)
    {
        $this->container['gameplayIdList'] = $gameplayIdList;

        return $this;
    }

    /**
     * Gets gameThemeId
     *
     * @return int|mixed
     */
    public function getGameThemeId()
    {
        return $this->container['gameThemeId'];
    }

    /**
     * Sets gameThemeId
     *
     * @param int|mixed $gameThemeId gameThemeId
     *
     * @return $this
     */
    public function setGameThemeId($gameThemeId)
    {
        $this->container['gameThemeId'] = $gameThemeId;

        return $this;
    }

    /**
     * Gets gameSubThemeId
     *
     * @return int|mixed
     */
    public function getGameSubThemeId()
    {
        return $this->container['gameSubThemeId'];
    }

    /**
     * Sets gameSubThemeId
     *
     * @param int|mixed $gameSubThemeId gameSubThemeId
     *
     * @return $this
     */
    public function setGameSubThemeId($gameSubThemeId)
    {
        $this->container['gameSubThemeId'] = $gameSubThemeId;

        return $this;
    }

    /**
     * Gets gameMarketingLifecycleList
     *
     * @return \TencentAds\Model\GameMarketingLifecycleStruct[]|mixed
     */
    public function getGameMarketingLifecycleList()
    {
        return $this->container['gameMarketingLifecycleList'];
    }

    /**
     * Sets gameMarketingLifecycleList
     *
     * @param \TencentAds\Model\GameMarketingLifecycleStruct[]|mixed $gameMarketingLifecycleList gameMarketingLifecycleList
     *
     * @return $this
     */
    public function setGameMarketingLifecycleList($gameMarketingLifecycleList)
    {
        $this->container['gameMarketingLifecycleList'] = $gameMarketingLifecycleList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


