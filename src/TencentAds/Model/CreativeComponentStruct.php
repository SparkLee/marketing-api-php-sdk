<?php
/**
 * CreativeComponentStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * CreativeComponentStruct Class Doc Comment
 *
 * @category Class
 * @description 创意组件信息
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreativeComponentStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'creative_component_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'accountId' => 'int',
        'componentName' => 'string',
        'componentId' => 'int',
        'componentType' => '\TencentAds\Model\CreativeComponentType',
        'promotedObjectType' => '\TencentAds\Model\PromotedObjectType',
        'promotedObjectId' => 'string',
        'promotedObjectName' => 'string',
        'status' => '\TencentAds\Model\AdStatus',
        'auditStatus' => '\TencentAds\Model\CreativeComponentAuditStatus',
        'auditMsg' => 'string',
        'componentSpec' => '\TencentAds\Model\CreativeComponentSpecStruct',
        'promotedObjectSpec' => '\TencentAds\Model\PromotedObjectSpec',
        'createdTime' => 'int',
        'lastModifiedTime' => 'int',
        'isPublishEnabled' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'accountId' => 'int64',
        'componentName' => null,
        'componentId' => 'int64',
        'componentType' => null,
        'promotedObjectType' => null,
        'promotedObjectId' => null,
        'promotedObjectName' => null,
        'status' => null,
        'auditStatus' => null,
        'auditMsg' => null,
        'componentSpec' => null,
        'promotedObjectSpec' => null,
        'createdTime' => 'int64',
        'lastModifiedTime' => 'int64',
        'isPublishEnabled' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'account_id',
        'componentName' => 'component_name',
        'componentId' => 'component_id',
        'componentType' => 'component_type',
        'promotedObjectType' => 'promoted_object_type',
        'promotedObjectId' => 'promoted_object_id',
        'promotedObjectName' => 'promoted_object_name',
        'status' => 'status',
        'auditStatus' => 'audit_status',
        'auditMsg' => 'audit_msg',
        'componentSpec' => 'component_spec',
        'promotedObjectSpec' => 'promoted_object_spec',
        'createdTime' => 'created_time',
        'lastModifiedTime' => 'last_modified_time',
        'isPublishEnabled' => 'is_publish_enabled'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'componentName' => 'setComponentName',
        'componentId' => 'setComponentId',
        'componentType' => 'setComponentType',
        'promotedObjectType' => 'setPromotedObjectType',
        'promotedObjectId' => 'setPromotedObjectId',
        'promotedObjectName' => 'setPromotedObjectName',
        'status' => 'setStatus',
        'auditStatus' => 'setAuditStatus',
        'auditMsg' => 'setAuditMsg',
        'componentSpec' => 'setComponentSpec',
        'promotedObjectSpec' => 'setPromotedObjectSpec',
        'createdTime' => 'setCreatedTime',
        'lastModifiedTime' => 'setLastModifiedTime',
        'isPublishEnabled' => 'setIsPublishEnabled'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'componentName' => 'getComponentName',
        'componentId' => 'getComponentId',
        'componentType' => 'getComponentType',
        'promotedObjectType' => 'getPromotedObjectType',
        'promotedObjectId' => 'getPromotedObjectId',
        'promotedObjectName' => 'getPromotedObjectName',
        'status' => 'getStatus',
        'auditStatus' => 'getAuditStatus',
        'auditMsg' => 'getAuditMsg',
        'componentSpec' => 'getComponentSpec',
        'promotedObjectSpec' => 'getPromotedObjectSpec',
        'createdTime' => 'getCreatedTime',
        'lastModifiedTime' => 'getLastModifiedTime',
        'isPublishEnabled' => 'getIsPublishEnabled'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['componentName'] = isset($data['componentName']) ? $data['componentName'] : null;
        $this->container['componentId'] = isset($data['componentId']) ? $data['componentId'] : null;
        $this->container['componentType'] = isset($data['componentType']) ? $data['componentType'] : null;
        $this->container['promotedObjectType'] = isset($data['promotedObjectType']) ? $data['promotedObjectType'] : null;
        $this->container['promotedObjectId'] = isset($data['promotedObjectId']) ? $data['promotedObjectId'] : null;
        $this->container['promotedObjectName'] = isset($data['promotedObjectName']) ? $data['promotedObjectName'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['auditStatus'] = isset($data['auditStatus']) ? $data['auditStatus'] : null;
        $this->container['auditMsg'] = isset($data['auditMsg']) ? $data['auditMsg'] : null;
        $this->container['componentSpec'] = isset($data['componentSpec']) ? $data['componentSpec'] : null;
        $this->container['promotedObjectSpec'] = isset($data['promotedObjectSpec']) ? $data['promotedObjectSpec'] : null;
        $this->container['createdTime'] = isset($data['createdTime']) ? $data['createdTime'] : null;
        $this->container['lastModifiedTime'] = isset($data['lastModifiedTime']) ? $data['lastModifiedTime'] : null;
        $this->container['isPublishEnabled'] = isset($data['isPublishEnabled']) ? $data['isPublishEnabled'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int|mixed
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int|mixed $accountId accountId
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets componentName
     *
     * @return string|mixed
     */
    public function getComponentName()
    {
        return $this->container['componentName'];
    }

    /**
     * Sets componentName
     *
     * @param string|mixed $componentName componentName
     *
     * @return $this
     */
    public function setComponentName($componentName)
    {
        $this->container['componentName'] = $componentName;

        return $this;
    }

    /**
     * Gets componentId
     *
     * @return int|mixed
     */
    public function getComponentId()
    {
        return $this->container['componentId'];
    }

    /**
     * Sets componentId
     *
     * @param int|mixed $componentId componentId
     *
     * @return $this
     */
    public function setComponentId($componentId)
    {
        $this->container['componentId'] = $componentId;

        return $this;
    }

    /**
     * Gets componentType
     *
     * @return \TencentAds\Model\CreativeComponentType|mixed
     */
    public function getComponentType()
    {
        return $this->container['componentType'];
    }

    /**
     * Sets componentType
     *
     * @param \TencentAds\Model\CreativeComponentType|mixed $componentType componentType
     *
     * @return $this
     */
    public function setComponentType($componentType)
    {
        $this->container['componentType'] = $componentType;

        return $this;
    }

    /**
     * Gets promotedObjectType
     *
     * @return \TencentAds\Model\PromotedObjectType|mixed
     */
    public function getPromotedObjectType()
    {
        return $this->container['promotedObjectType'];
    }

    /**
     * Sets promotedObjectType
     *
     * @param \TencentAds\Model\PromotedObjectType|mixed $promotedObjectType promotedObjectType
     *
     * @return $this
     */
    public function setPromotedObjectType($promotedObjectType)
    {
        $this->container['promotedObjectType'] = $promotedObjectType;

        return $this;
    }

    /**
     * Gets promotedObjectId
     *
     * @return string|mixed
     */
    public function getPromotedObjectId()
    {
        return $this->container['promotedObjectId'];
    }

    /**
     * Sets promotedObjectId
     *
     * @param string|mixed $promotedObjectId promotedObjectId
     *
     * @return $this
     */
    public function setPromotedObjectId($promotedObjectId)
    {
        $this->container['promotedObjectId'] = $promotedObjectId;

        return $this;
    }

    /**
     * Gets promotedObjectName
     *
     * @return string|mixed
     */
    public function getPromotedObjectName()
    {
        return $this->container['promotedObjectName'];
    }

    /**
     * Sets promotedObjectName
     *
     * @param string|mixed $promotedObjectName promotedObjectName
     *
     * @return $this
     */
    public function setPromotedObjectName($promotedObjectName)
    {
        $this->container['promotedObjectName'] = $promotedObjectName;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \TencentAds\Model\AdStatus|mixed
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \TencentAds\Model\AdStatus|mixed $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets auditStatus
     *
     * @return \TencentAds\Model\CreativeComponentAuditStatus|mixed
     */
    public function getAuditStatus()
    {
        return $this->container['auditStatus'];
    }

    /**
     * Sets auditStatus
     *
     * @param \TencentAds\Model\CreativeComponentAuditStatus|mixed $auditStatus auditStatus
     *
     * @return $this
     */
    public function setAuditStatus($auditStatus)
    {
        $this->container['auditStatus'] = $auditStatus;

        return $this;
    }

    /**
     * Gets auditMsg
     *
     * @return string|mixed
     */
    public function getAuditMsg()
    {
        return $this->container['auditMsg'];
    }

    /**
     * Sets auditMsg
     *
     * @param string|mixed $auditMsg auditMsg
     *
     * @return $this
     */
    public function setAuditMsg($auditMsg)
    {
        $this->container['auditMsg'] = $auditMsg;

        return $this;
    }

    /**
     * Gets componentSpec
     *
     * @return \TencentAds\Model\CreativeComponentSpecStruct|mixed
     */
    public function getComponentSpec()
    {
        return $this->container['componentSpec'];
    }

    /**
     * Sets componentSpec
     *
     * @param \TencentAds\Model\CreativeComponentSpecStruct|mixed $componentSpec componentSpec
     *
     * @return $this
     */
    public function setComponentSpec($componentSpec)
    {
        $this->container['componentSpec'] = $componentSpec;

        return $this;
    }

    /**
     * Gets promotedObjectSpec
     *
     * @return \TencentAds\Model\PromotedObjectSpec|mixed
     */
    public function getPromotedObjectSpec()
    {
        return $this->container['promotedObjectSpec'];
    }

    /**
     * Sets promotedObjectSpec
     *
     * @param \TencentAds\Model\PromotedObjectSpec|mixed $promotedObjectSpec promotedObjectSpec
     *
     * @return $this
     */
    public function setPromotedObjectSpec($promotedObjectSpec)
    {
        $this->container['promotedObjectSpec'] = $promotedObjectSpec;

        return $this;
    }

    /**
     * Gets createdTime
     *
     * @return int|mixed
     */
    public function getCreatedTime()
    {
        return $this->container['createdTime'];
    }

    /**
     * Sets createdTime
     *
     * @param int|mixed $createdTime createdTime
     *
     * @return $this
     */
    public function setCreatedTime($createdTime)
    {
        $this->container['createdTime'] = $createdTime;

        return $this;
    }

    /**
     * Gets lastModifiedTime
     *
     * @return int|mixed
     */
    public function getLastModifiedTime()
    {
        return $this->container['lastModifiedTime'];
    }

    /**
     * Sets lastModifiedTime
     *
     * @param int|mixed $lastModifiedTime lastModifiedTime
     *
     * @return $this
     */
    public function setLastModifiedTime($lastModifiedTime)
    {
        $this->container['lastModifiedTime'] = $lastModifiedTime;

        return $this;
    }

    /**
     * Gets isPublishEnabled
     *
     * @return bool|mixed
     */
    public function getIsPublishEnabled()
    {
        return $this->container['isPublishEnabled'];
    }

    /**
     * Sets isPublishEnabled
     *
     * @param bool|mixed $isPublishEnabled isPublishEnabled
     *
     * @return $this
     */
    public function setIsPublishEnabled($isPublishEnabled)
    {
        $this->container['isPublishEnabled'] = $isPublishEnabled;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


