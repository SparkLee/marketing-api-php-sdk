<?php
/**
 * AuthListStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * AuthListStruct Class Doc Comment
 *
 * @category Class
 * @description 返回结构
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuthListStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'auth_list_struct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'promotedObjectName' => 'string',
        'promotedObjectId' => 'string',
        'promotedObjectType' => '\TencentAds\Model\PromotedObjectType',
        'authToken' => 'string',
        'authBeginDate' => 'int',
        'authTtl' => 'int',
        'status' => 'int',
        'auditMsg' => 'string',
        'authType' => '\TencentAds\Model\WechatAuthType',
        'authScope' => '\TencentAds\Model\WechatAuthScope'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'promotedObjectName' => null,
        'promotedObjectId' => null,
        'promotedObjectType' => null,
        'authToken' => null,
        'authBeginDate' => 'int64',
        'authTtl' => 'int64',
        'status' => 'int64',
        'auditMsg' => null,
        'authType' => null,
        'authScope' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'promotedObjectName' => 'promoted_object_name',
        'promotedObjectId' => 'promoted_object_id',
        'promotedObjectType' => 'promoted_object_type',
        'authToken' => 'auth_token',
        'authBeginDate' => 'auth_begin_date',
        'authTtl' => 'auth_ttl',
        'status' => 'status',
        'auditMsg' => 'audit_msg',
        'authType' => 'auth_type',
        'authScope' => 'auth_scope'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'promotedObjectName' => 'setPromotedObjectName',
        'promotedObjectId' => 'setPromotedObjectId',
        'promotedObjectType' => 'setPromotedObjectType',
        'authToken' => 'setAuthToken',
        'authBeginDate' => 'setAuthBeginDate',
        'authTtl' => 'setAuthTtl',
        'status' => 'setStatus',
        'auditMsg' => 'setAuditMsg',
        'authType' => 'setAuthType',
        'authScope' => 'setAuthScope'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'promotedObjectName' => 'getPromotedObjectName',
        'promotedObjectId' => 'getPromotedObjectId',
        'promotedObjectType' => 'getPromotedObjectType',
        'authToken' => 'getAuthToken',
        'authBeginDate' => 'getAuthBeginDate',
        'authTtl' => 'getAuthTtl',
        'status' => 'getStatus',
        'auditMsg' => 'getAuditMsg',
        'authType' => 'getAuthType',
        'authScope' => 'getAuthScope'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['promotedObjectName'] = isset($data['promotedObjectName']) ? $data['promotedObjectName'] : null;
        $this->container['promotedObjectId'] = isset($data['promotedObjectId']) ? $data['promotedObjectId'] : null;
        $this->container['promotedObjectType'] = isset($data['promotedObjectType']) ? $data['promotedObjectType'] : null;
        $this->container['authToken'] = isset($data['authToken']) ? $data['authToken'] : null;
        $this->container['authBeginDate'] = isset($data['authBeginDate']) ? $data['authBeginDate'] : null;
        $this->container['authTtl'] = isset($data['authTtl']) ? $data['authTtl'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['auditMsg'] = isset($data['auditMsg']) ? $data['auditMsg'] : null;
        $this->container['authType'] = isset($data['authType']) ? $data['authType'] : null;
        $this->container['authScope'] = isset($data['authScope']) ? $data['authScope'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets promotedObjectName
     *
     * @return string|mixed
     */
    public function getPromotedObjectName()
    {
        return $this->container['promotedObjectName'];
    }

    /**
     * Sets promotedObjectName
     *
     * @param string|mixed $promotedObjectName promotedObjectName
     *
     * @return $this
     */
    public function setPromotedObjectName($promotedObjectName)
    {
        $this->container['promotedObjectName'] = $promotedObjectName;

        return $this;
    }

    /**
     * Gets promotedObjectId
     *
     * @return string|mixed
     */
    public function getPromotedObjectId()
    {
        return $this->container['promotedObjectId'];
    }

    /**
     * Sets promotedObjectId
     *
     * @param string|mixed $promotedObjectId promotedObjectId
     *
     * @return $this
     */
    public function setPromotedObjectId($promotedObjectId)
    {
        $this->container['promotedObjectId'] = $promotedObjectId;

        return $this;
    }

    /**
     * Gets promotedObjectType
     *
     * @return \TencentAds\Model\PromotedObjectType|mixed
     */
    public function getPromotedObjectType()
    {
        return $this->container['promotedObjectType'];
    }

    /**
     * Sets promotedObjectType
     *
     * @param \TencentAds\Model\PromotedObjectType|mixed $promotedObjectType promotedObjectType
     *
     * @return $this
     */
    public function setPromotedObjectType($promotedObjectType)
    {
        $this->container['promotedObjectType'] = $promotedObjectType;

        return $this;
    }

    /**
     * Gets authToken
     *
     * @return string|mixed
     */
    public function getAuthToken()
    {
        return $this->container['authToken'];
    }

    /**
     * Sets authToken
     *
     * @param string|mixed $authToken authToken
     *
     * @return $this
     */
    public function setAuthToken($authToken)
    {
        $this->container['authToken'] = $authToken;

        return $this;
    }

    /**
     * Gets authBeginDate
     *
     * @return int|mixed
     */
    public function getAuthBeginDate()
    {
        return $this->container['authBeginDate'];
    }

    /**
     * Sets authBeginDate
     *
     * @param int|mixed $authBeginDate authBeginDate
     *
     * @return $this
     */
    public function setAuthBeginDate($authBeginDate)
    {
        $this->container['authBeginDate'] = $authBeginDate;

        return $this;
    }

    /**
     * Gets authTtl
     *
     * @return int|mixed
     */
    public function getAuthTtl()
    {
        return $this->container['authTtl'];
    }

    /**
     * Sets authTtl
     *
     * @param int|mixed $authTtl authTtl
     *
     * @return $this
     */
    public function setAuthTtl($authTtl)
    {
        $this->container['authTtl'] = $authTtl;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int|mixed
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int|mixed $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets auditMsg
     *
     * @return string|mixed
     */
    public function getAuditMsg()
    {
        return $this->container['auditMsg'];
    }

    /**
     * Sets auditMsg
     *
     * @param string|mixed $auditMsg auditMsg
     *
     * @return $this
     */
    public function setAuditMsg($auditMsg)
    {
        $this->container['auditMsg'] = $auditMsg;

        return $this;
    }

    /**
     * Gets authType
     *
     * @return \TencentAds\Model\WechatAuthType|mixed
     */
    public function getAuthType()
    {
        return $this->container['authType'];
    }

    /**
     * Sets authType
     *
     * @param \TencentAds\Model\WechatAuthType|mixed $authType authType
     *
     * @return $this
     */
    public function setAuthType($authType)
    {
        $this->container['authType'] = $authType;

        return $this;
    }

    /**
     * Gets authScope
     *
     * @return \TencentAds\Model\WechatAuthScope|mixed
     */
    public function getAuthScope()
    {
        return $this->container['authScope'];
    }

    /**
     * Sets authScope
     *
     * @param \TencentAds\Model\WechatAuthScope|mixed $authScope authScope
     *
     * @return $this
     */
    public function setAuthScope($authScope)
    {
        $this->container['authScope'] = $authScope;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


