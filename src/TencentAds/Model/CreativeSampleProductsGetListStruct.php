<?php
/**
 * CreativeSampleProductsGetListStruct
 *
 * PHP version 5
 *
 * @category Class
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing API
 *
 * Marketing API
 *
 * OpenAPI spec version: 1.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TencentAds\Model;

use \ArrayAccess;
use \TencentAds\ObjectSerializer;

/**
 * CreativeSampleProductsGetListStruct Class Doc Comment
 *
 * @category Class
 * @description 返回结构
 * @package  TencentAds
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreativeSampleProductsGetListStruct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreativeSampleProductsGetListStruct';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'productCatalogId' => 'int',
        'productSeriesId' => 'int',
        'productOuterId' => 'string',
        'productName' => 'string',
        'slogan' => 'string',
        'productShortName' => 'string',
        'adBrandUrl' => 'string',
        'imageUrl' => 'string',
        'additionalImageUrl1' => 'string',
        'advertisementImages' => 'string[]',
        'advertisementLandscapeImages' => 'string[]',
        'advertisementPortraitImages' => 'string[]',
        'videoUrl' => 'string',
        'adDirectVideos' => 'string[]',
        'adDirectLandscapeVideos' => 'string[]',
        'adDirectPortraitVideos' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'productCatalogId' => 'int64',
        'productSeriesId' => 'int64',
        'productOuterId' => null,
        'productName' => null,
        'slogan' => null,
        'productShortName' => null,
        'adBrandUrl' => null,
        'imageUrl' => null,
        'additionalImageUrl1' => null,
        'advertisementImages' => null,
        'advertisementLandscapeImages' => null,
        'advertisementPortraitImages' => null,
        'videoUrl' => null,
        'adDirectVideos' => null,
        'adDirectLandscapeVideos' => null,
        'adDirectPortraitVideos' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'productCatalogId' => 'product_catalog_id',
        'productSeriesId' => 'product_series_id',
        'productOuterId' => 'product_outer_id',
        'productName' => 'product_name',
        'slogan' => 'slogan',
        'productShortName' => 'product_short_name',
        'adBrandUrl' => 'ad_brand_url',
        'imageUrl' => 'image_url',
        'additionalImageUrl1' => 'additional_image_url_1',
        'advertisementImages' => 'advertisement_images',
        'advertisementLandscapeImages' => 'advertisement_landscape_images',
        'advertisementPortraitImages' => 'advertisement_portrait_images',
        'videoUrl' => 'video_url',
        'adDirectVideos' => 'ad_direct_videos',
        'adDirectLandscapeVideos' => 'ad_direct_landscape_videos',
        'adDirectPortraitVideos' => 'ad_direct_portrait_videos'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'productCatalogId' => 'setProductCatalogId',
        'productSeriesId' => 'setProductSeriesId',
        'productOuterId' => 'setProductOuterId',
        'productName' => 'setProductName',
        'slogan' => 'setSlogan',
        'productShortName' => 'setProductShortName',
        'adBrandUrl' => 'setAdBrandUrl',
        'imageUrl' => 'setImageUrl',
        'additionalImageUrl1' => 'setAdditionalImageUrl1',
        'advertisementImages' => 'setAdvertisementImages',
        'advertisementLandscapeImages' => 'setAdvertisementLandscapeImages',
        'advertisementPortraitImages' => 'setAdvertisementPortraitImages',
        'videoUrl' => 'setVideoUrl',
        'adDirectVideos' => 'setAdDirectVideos',
        'adDirectLandscapeVideos' => 'setAdDirectLandscapeVideos',
        'adDirectPortraitVideos' => 'setAdDirectPortraitVideos'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'productCatalogId' => 'getProductCatalogId',
        'productSeriesId' => 'getProductSeriesId',
        'productOuterId' => 'getProductOuterId',
        'productName' => 'getProductName',
        'slogan' => 'getSlogan',
        'productShortName' => 'getProductShortName',
        'adBrandUrl' => 'getAdBrandUrl',
        'imageUrl' => 'getImageUrl',
        'additionalImageUrl1' => 'getAdditionalImageUrl1',
        'advertisementImages' => 'getAdvertisementImages',
        'advertisementLandscapeImages' => 'getAdvertisementLandscapeImages',
        'advertisementPortraitImages' => 'getAdvertisementPortraitImages',
        'videoUrl' => 'getVideoUrl',
        'adDirectVideos' => 'getAdDirectVideos',
        'adDirectLandscapeVideos' => 'getAdDirectLandscapeVideos',
        'adDirectPortraitVideos' => 'getAdDirectPortraitVideos'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['productCatalogId'] = isset($data['productCatalogId']) ? $data['productCatalogId'] : null;
        $this->container['productSeriesId'] = isset($data['productSeriesId']) ? $data['productSeriesId'] : null;
        $this->container['productOuterId'] = isset($data['productOuterId']) ? $data['productOuterId'] : null;
        $this->container['productName'] = isset($data['productName']) ? $data['productName'] : null;
        $this->container['slogan'] = isset($data['slogan']) ? $data['slogan'] : null;
        $this->container['productShortName'] = isset($data['productShortName']) ? $data['productShortName'] : null;
        $this->container['adBrandUrl'] = isset($data['adBrandUrl']) ? $data['adBrandUrl'] : null;
        $this->container['imageUrl'] = isset($data['imageUrl']) ? $data['imageUrl'] : null;
        $this->container['additionalImageUrl1'] = isset($data['additionalImageUrl1']) ? $data['additionalImageUrl1'] : null;
        $this->container['advertisementImages'] = isset($data['advertisementImages']) ? $data['advertisementImages'] : null;
        $this->container['advertisementLandscapeImages'] = isset($data['advertisementLandscapeImages']) ? $data['advertisementLandscapeImages'] : null;
        $this->container['advertisementPortraitImages'] = isset($data['advertisementPortraitImages']) ? $data['advertisementPortraitImages'] : null;
        $this->container['videoUrl'] = isset($data['videoUrl']) ? $data['videoUrl'] : null;
        $this->container['adDirectVideos'] = isset($data['adDirectVideos']) ? $data['adDirectVideos'] : null;
        $this->container['adDirectLandscapeVideos'] = isset($data['adDirectLandscapeVideos']) ? $data['adDirectLandscapeVideos'] : null;
        $this->container['adDirectPortraitVideos'] = isset($data['adDirectPortraitVideos']) ? $data['adDirectPortraitVideos'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets productCatalogId
     *
     * @return int|mixed
     */
    public function getProductCatalogId()
    {
        return $this->container['productCatalogId'];
    }

    /**
     * Sets productCatalogId
     *
     * @param int|mixed $productCatalogId productCatalogId
     *
     * @return $this
     */
    public function setProductCatalogId($productCatalogId)
    {
        $this->container['productCatalogId'] = $productCatalogId;

        return $this;
    }

    /**
     * Gets productSeriesId
     *
     * @return int|mixed
     */
    public function getProductSeriesId()
    {
        return $this->container['productSeriesId'];
    }

    /**
     * Sets productSeriesId
     *
     * @param int|mixed $productSeriesId productSeriesId
     *
     * @return $this
     */
    public function setProductSeriesId($productSeriesId)
    {
        $this->container['productSeriesId'] = $productSeriesId;

        return $this;
    }

    /**
     * Gets productOuterId
     *
     * @return string|mixed
     */
    public function getProductOuterId()
    {
        return $this->container['productOuterId'];
    }

    /**
     * Sets productOuterId
     *
     * @param string|mixed $productOuterId productOuterId
     *
     * @return $this
     */
    public function setProductOuterId($productOuterId)
    {
        $this->container['productOuterId'] = $productOuterId;

        return $this;
    }

    /**
     * Gets productName
     *
     * @return string|mixed
     */
    public function getProductName()
    {
        return $this->container['productName'];
    }

    /**
     * Sets productName
     *
     * @param string|mixed $productName productName
     *
     * @return $this
     */
    public function setProductName($productName)
    {
        $this->container['productName'] = $productName;

        return $this;
    }

    /**
     * Gets slogan
     *
     * @return string|mixed
     */
    public function getSlogan()
    {
        return $this->container['slogan'];
    }

    /**
     * Sets slogan
     *
     * @param string|mixed $slogan slogan
     *
     * @return $this
     */
    public function setSlogan($slogan)
    {
        $this->container['slogan'] = $slogan;

        return $this;
    }

    /**
     * Gets productShortName
     *
     * @return string|mixed
     */
    public function getProductShortName()
    {
        return $this->container['productShortName'];
    }

    /**
     * Sets productShortName
     *
     * @param string|mixed $productShortName productShortName
     *
     * @return $this
     */
    public function setProductShortName($productShortName)
    {
        $this->container['productShortName'] = $productShortName;

        return $this;
    }

    /**
     * Gets adBrandUrl
     *
     * @return string|mixed
     */
    public function getAdBrandUrl()
    {
        return $this->container['adBrandUrl'];
    }

    /**
     * Sets adBrandUrl
     *
     * @param string|mixed $adBrandUrl adBrandUrl
     *
     * @return $this
     */
    public function setAdBrandUrl($adBrandUrl)
    {
        $this->container['adBrandUrl'] = $adBrandUrl;

        return $this;
    }

    /**
     * Gets imageUrl
     *
     * @return string|mixed
     */
    public function getImageUrl()
    {
        return $this->container['imageUrl'];
    }

    /**
     * Sets imageUrl
     *
     * @param string|mixed $imageUrl imageUrl
     *
     * @return $this
     */
    public function setImageUrl($imageUrl)
    {
        $this->container['imageUrl'] = $imageUrl;

        return $this;
    }

    /**
     * Gets additionalImageUrl1
     *
     * @return string|mixed
     */
    public function getAdditionalImageUrl1()
    {
        return $this->container['additionalImageUrl1'];
    }

    /**
     * Sets additionalImageUrl1
     *
     * @param string|mixed $additionalImageUrl1 additionalImageUrl1
     *
     * @return $this
     */
    public function setAdditionalImageUrl1($additionalImageUrl1)
    {
        $this->container['additionalImageUrl1'] = $additionalImageUrl1;

        return $this;
    }

    /**
     * Gets advertisementImages
     *
     * @return string[]|mixed
     */
    public function getAdvertisementImages()
    {
        return $this->container['advertisementImages'];
    }

    /**
     * Sets advertisementImages
     *
     * @param string[]|mixed $advertisementImages advertisementImages
     *
     * @return $this
     */
    public function setAdvertisementImages($advertisementImages)
    {
        $this->container['advertisementImages'] = $advertisementImages;

        return $this;
    }

    /**
     * Gets advertisementLandscapeImages
     *
     * @return string[]|mixed
     */
    public function getAdvertisementLandscapeImages()
    {
        return $this->container['advertisementLandscapeImages'];
    }

    /**
     * Sets advertisementLandscapeImages
     *
     * @param string[]|mixed $advertisementLandscapeImages advertisementLandscapeImages
     *
     * @return $this
     */
    public function setAdvertisementLandscapeImages($advertisementLandscapeImages)
    {
        $this->container['advertisementLandscapeImages'] = $advertisementLandscapeImages;

        return $this;
    }

    /**
     * Gets advertisementPortraitImages
     *
     * @return string[]|mixed
     */
    public function getAdvertisementPortraitImages()
    {
        return $this->container['advertisementPortraitImages'];
    }

    /**
     * Sets advertisementPortraitImages
     *
     * @param string[]|mixed $advertisementPortraitImages advertisementPortraitImages
     *
     * @return $this
     */
    public function setAdvertisementPortraitImages($advertisementPortraitImages)
    {
        $this->container['advertisementPortraitImages'] = $advertisementPortraitImages;

        return $this;
    }

    /**
     * Gets videoUrl
     *
     * @return string|mixed
     */
    public function getVideoUrl()
    {
        return $this->container['videoUrl'];
    }

    /**
     * Sets videoUrl
     *
     * @param string|mixed $videoUrl videoUrl
     *
     * @return $this
     */
    public function setVideoUrl($videoUrl)
    {
        $this->container['videoUrl'] = $videoUrl;

        return $this;
    }

    /**
     * Gets adDirectVideos
     *
     * @return string[]|mixed
     */
    public function getAdDirectVideos()
    {
        return $this->container['adDirectVideos'];
    }

    /**
     * Sets adDirectVideos
     *
     * @param string[]|mixed $adDirectVideos adDirectVideos
     *
     * @return $this
     */
    public function setAdDirectVideos($adDirectVideos)
    {
        $this->container['adDirectVideos'] = $adDirectVideos;

        return $this;
    }

    /**
     * Gets adDirectLandscapeVideos
     *
     * @return string[]|mixed
     */
    public function getAdDirectLandscapeVideos()
    {
        return $this->container['adDirectLandscapeVideos'];
    }

    /**
     * Sets adDirectLandscapeVideos
     *
     * @param string[]|mixed $adDirectLandscapeVideos adDirectLandscapeVideos
     *
     * @return $this
     */
    public function setAdDirectLandscapeVideos($adDirectLandscapeVideos)
    {
        $this->container['adDirectLandscapeVideos'] = $adDirectLandscapeVideos;

        return $this;
    }

    /**
     * Gets adDirectPortraitVideos
     *
     * @return string[]|mixed
     */
    public function getAdDirectPortraitVideos()
    {
        return $this->container['adDirectPortraitVideos'];
    }

    /**
     * Sets adDirectPortraitVideos
     *
     * @param string[]|mixed $adDirectPortraitVideos adDirectPortraitVideos
     *
     * @return $this
     */
    public function setAdDirectPortraitVideos($adDirectPortraitVideos)
    {
        $this->container['adDirectPortraitVideos'] = $adDirectPortraitVideos;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


